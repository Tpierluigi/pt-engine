<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" creationComplete="inizializzazione()" 
		 width="400" height="300" title="Proprietà oggetto: {idForma} ({classe})">

	<fx:Declarations>

		<!-- Place non-visual elements (e.g., services, value objects) here -->


	</fx:Declarations>
	<fx:Script>
		<![CDATA[
		import air.update.utils.StringUtils;
		import com.engine.base.IForma;
		import com.engine.applicazione.Comando;
		import flash.events.MouseEvent;
		import flash.ui.Mouse;
		import flash.utils.getQualifiedClassName;
		import mx.collections.ArrayCollection;
		import mx.controls.Button;
		import mx.controls.TextInput;
		import mx.events.DataGridEvent;
		import com.engine.base.FormaEvent;
		import mx.controls.Alert;
		protected var _forma: IForma;
		[Bindable]
		protected var _dati:ArrayCollection;
		
		public function get forma():IForma{
			return _forma;
		};
		public function set forma(forma:IForma):void 
		{
			this._forma = forma;
			this.idForma = _forma.id;
			this.classe = getQualifiedClassName( _forma);
			aggiornaProprieta();
			aggiornaAzioni();
		};
		
		[Bindable]
		public var idForma:String;
		[Bindable]
		public var classe:String;
		
		private function inizializzazione():void{
			this.addEventListener(MouseEvent.CLICK, function(e:MouseEvent):void{
				e.stopImmediatePropagation();
			});
		}
		/**
		 * aggiorna la datagrid con la lista delle proprietà relative
		 * all'oggetto correntemente selezionato nell'applicazione
		 */
		public function aggiornaProprieta():void 
		{
			var riga:Object;
			_dati = new ArrayCollection();
			if (_forma != null){
				for (var i:int = 0; i < forma.listaProprieta.length; i++) 
				{
					riga = new Object();
					riga.proprieta = forma.listaProprieta[i];
					riga.valore = forma[riga.proprieta];
					_dati.addItem(riga);
				}
			}
		}
		/**
		 * aggiorna l'elenco delle azioni in funzione del tipo della forma selezionata nell'applicazione
		 */
		public function aggiornaAzioni():void{
			
			var bottone:Comando;
			var handler:Function;
			var funzione:String;
			var etichetta:String ;
			var listaAzioni:Array ;
			if (forma != null){
				vg1.removeAllElements();
				listaAzioni= forma.listaAzioni;
				handler = function(funzione:int):void{
					Alert.show(listaAzioni[funzione].f);

				}
				for (var i:int = 0; i <listaAzioni.length; i++) 
				{
					funzione = listaAzioni[i].f;
					etichetta= listaAzioni[i].c;
					bottone = new Comando();
					bottone.label = etichetta;
					bottone.funzione = funzione;
					bottone.addEventListener(MouseEvent.CLICK,function(e:MouseEvent):void{
						//lancio il metodo della forma corrispondente 
						var funzione:String = (e.target as Comando).funzione;
						if(funzione in forma && forma[funzione] is Function){
							forma[funzione]();
						}else{
							Alert.show("metodo da implementare");
						}
						e.stopImmediatePropagation();
					});
					vg1.addElement(bottone);
				} 
				
			}
		}
		/**
		 * gestore evento che si preoccupa di aggiornare la forma selezionata 
		 * quando viene cambiata una proprietà di quelle visibili sul datagrid
		 * @param	event
		 */
		protected function aggiornaForma(event: DataGridEvent ):void{
			var textInput:TextInput = dGrid.itemEditorInstance as TextInput;
			var propName:String = ArrayCollection(dGrid.dataProvider).getItemAt(event.rowIndex).proprieta;
			forma[propName] = textInput.text;
			//aggiorno anche il resizer, se attivo
			this.dispatchEvent(new FormaEvent(FormaEvent.REFRESH_RESIZER, true));
			}
		]]>
	</fx:Script>
		<s:Scroller top="10" bottom="70" left="10" right="10">
			<s:Group>
				<mx:DataGrid id="dGrid" width="{vg1.width}" dataProvider="{this._dati}" editable="true" itemEditEnd="aggiornaForma(event);">
					<mx:columns>
						<mx:DataGridColumn dataField="proprieta" editable="false" />
						<mx:DataGridColumn dataField="valore" />
					</mx:columns>
				</mx:DataGrid>
			</s:Group>
		</s:Scroller>

	<s:TileGroup left="10" right="10" height="50" bottom="10" id="vg1"></s:TileGroup>
</s:Panel>